
   version: '3.8'

   services:
     nginx:
       build:
         context: .
         dockerfile: nginx/Dockerfile
       ports:
         - "80:80"
       depends_on:
         - backend
       networks:
         - app-network
       healthcheck:
         test: ["CMD", "nginx", "-t"]
         interval: 30s
         timeout: 5s
         retries: 3

     backend:
       build:
         context: ./backend
         dockerfile: Dockerfile
       depends_on:
         postgres:
           condition: service_healthy
         redis:
           condition: service_healthy
       env_file:
         - ./backend/.env
       environment:
         - NODE_ENV=development
         - PORT=3000
       networks:
         - app-network
       volumes:
         - backend_logs:/var/log/app
       command: sh -c "sleep 5 && node dist/main.js"

     postgres:
       image: postgres:16-alpine
       env_file:
         - ./backend/.env
       ports:
         - "5432:5432"
       volumes:
         - postgres_data:/var/lib/postgresql/data
       networks:
         - app-network
       healthcheck:
         test: ["CMD", "pg_isready", "-U", "ruble_trade", "-d", "ruble_trade_db"]
         interval: 10s
         timeout: 5s
         retries: 5

     redis:
       image: redis:7-alpine
       ports:
         - "6379:6379"
       volumes:
         - redis_data:/data
       networks:
         - app-network
       healthcheck:
         test: ["CMD", "redis-cli", "ping"]
         interval: 10s
         timeout: 5s
         retries: 5

   volumes:
     backend_logs:
     postgres_data:
     redis_data:

   networks:
     app-network:
       driver: bridge
