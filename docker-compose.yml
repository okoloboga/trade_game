version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - backend
    environment:
      - APP_URL=https://trade.ruble.website
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - ruble_trade_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - ruble_trade_network
    volumes:
      - backend_logs:/var/log/app
    command: sh -c "sleep 5 && node dist/main.js"

  postgres:
    image: postgres:16-alpine
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ruble_trade_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ruble_trade", "-d", "ruble_trade_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - ruble_trade_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  backend_logs:
  postgres_data:
  redis_data:

networks:
  ruble_trade_network:
    driver: bridge
