events {}

http {
  include mime.types; # Подключаем MIME-типы
  default_type application/octet-stream; # Дефолтный тип для неизвестных файлов
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  server {
    listen 80;
    # listen [::]:80;
    server_name localhost;
    # server_name trade.ruble.website;

    # Redirect HTTP to HTTPS (after SSL setup)
    # return 301 https://$host$request_uri;

    location / {
      root /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
    }

    location /api {
      proxy_pass http://backend:3000/api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Добавляем CORS заголовки для API
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      
      # Обработка preflight запросов
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }

    location /socket.io {
      proxy_pass http://backend:3000/socket.io;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400;
      proxy_send_timeout 86400;
      proxy_buffering off;

      error_log /var/log/nginx/socket_error.log debug;
      access_log /var/log/nginx/socket_access.log;
    }

    location /manifest.json {
      root /usr/share/nginx/html;
    }
  }

  # Uncomment after obtaining SSL certificates
  # server {
  #  listen 443 ssl;
  #  listen [::]:443 ssl;
  #  server_name trade.ruble.website;
  #
  #  ssl_certificate /etc/letsencrypt/live/trade.ruble.website/fullchain.pem;
  #  ssl_certificate_key /etc/letsencrypt/live/trade.ruble.website/privkey.pem;
  #
  #   location / {
  #     root /usr/share/nginx/html;
  #     try_files $uri $uri/ /index.html;
  #   }
  #
  #   location /api/v1 {
  #     proxy_pass http://backend:3000;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #   }
  #
  #   location /ws {
  #     proxy_pass http://backend:3000;
  #     proxy_http_version 1.1;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection "upgrade";
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #   }
  #
  #   location /manifest.json {
  #     root /usr/share/nginx/html;
  #   }
  # }
}
