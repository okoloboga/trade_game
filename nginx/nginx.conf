events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  server {
    listen 80;
    server_name trade.ruble.website;

    # Перенаправление HTTP на HTTPS
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name trade.ruble.website;

    ssl_certificate /etc/letsencrypt/live/trade.ruble.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/trade.ruble.website/privkey.pem;
    include /etc/nginx/options-ssl-nginx.conf; # Дополнительные настройки SSL
    ssl_dhparam /etc/nginx/ssl-dhparams.pem;   # Для повышения безопасности

    # SPA для фронтенда
    location / {
      root /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
    }

    # API proxy
    location /api/v1 {
      proxy_pass http://backend:3000/api/v1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # CORS для API
      add_header 'Access-Control-Allow-Origin' 'https://trade.ruble.website' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

      # Обработка preflight запросов
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://trade.ruble.website';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }

    # WebSocket
    location /socket.io {
      proxy_pass http://backend:3000/socket.io;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400s;
      proxy_send_timeout 500s;
      proxy_buffering off;

      error_log /var/log/nginx/socket_error.log debug;
      access_log /var/log/nginx/socket_access.log;
    }

    # TON Connect manifest
    location /manifest.json {
      root /usr/share/nginx/html;
    }
  }
}
